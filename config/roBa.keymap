#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        CapsLock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <23 22>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9 7>;
        };

        BackSlash {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 9>;
        };

        Apos {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        BackQuote {
            bindings = <&kp GRAVE>;
            key-positions = <33 32>;
        };

        LANG_1 {
            bindings = <&kp LANG1>;
            key-positions = <18 19>;
        };

        LANG_2 {
            bindings = <&kp LANG2>;
            key-positions = <13 12>;
        };

        Hyphen {
            bindings = <&kp MINUS>;
            key-positions = <25 24>;
        };

        UnderScore {
            bindings = <&kp LS(MINUS)>;
            key-positions = <30 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                   &kp T                                                       &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F                   &kp G        &kp LS(LG(S))               &lt 7 X            &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z      &kp X         &kp C         &kp V                   &kp B        &kp LEFT_BRACKET            &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt_to_layer_0 1 LANG1  &lt 5 SPACE  &lt_to_layer_0 3 LANG2      &kp BACKSPACE      &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        CONTROL {
            bindings = <
&kp LC(Q)  &kp LC(W)     &kp LC(E)     &kp LC(R)  &kp T                                            &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F      &kp G   &kp LS(LG(S))         &trans             &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z      &kp X         &kp C         &kp V      &kp B   &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &trans     &trans  &trans                &kp BACKSPACE      &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM-ARROW {
            bindings = <
&kp MINUS          &kp N7  &kp N8        &kp N9  &kp PLUS                                           &kp LS(INSERT)  &kp HOME  &kp PAGE_UP    &kp END    &kp INSERT
&kp SLASH          &kp N4  &kp N5        &kp N6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &trans  &kp LEFT        &kp DOWN  &kp UP         &kp RIGHT  &kp PERCENT
&mt LEFT_SHIFT N0  &kp N1  &kp NUMBER_2  &kp N3  &kp PERIOD    &kp EQUAL                    &trans  &trans          &trans    &kp PAGE_DOWN  &trans     &trans
&trans             &kp N0  &trans        &trans  &trans        &trans                       &trans  &trans                                              &trans
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SHIFT {
            bindings = <
&kp LS(Q)  &kp LS(W)  &kp E     &kp R   &kp T                       &kp Y   &kp U  &kp I      &kp O    &kp P
&kp A      &kp S      &kp D     &kp F   &kp G   &trans      &trans  &kp H   &kp J  &kp K      &kp L    &kp SEMI
&kp Z      &kp X      &kp C     &kp V   &kp B   &trans      &trans  &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL  &kp LALT   &kp LGUI  &trans  &trans  &trans      &trans  &trans                             &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp LC(S)     &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
